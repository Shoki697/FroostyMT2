; Listing generated by Microsoft (R) Optimizing Compiler Version 19.34.31937.0 

	TITLE	e:\metin2_server\solwaynesf v6\clientvs22\vs_files\userinterface\distribute\pythonnetworkstreamphaseselect.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB OLDNAMES

PUBLIC	??_C@_0BN@HMHBDFBF@?$CD?$CD?5Network?5?9?5Select?5Phase?5?$CD?$CD@ ; `string'
PUBLIC	??_C@_0BI@OHJNHIAD@SetSelectCharacterPhase@	; `string'
PUBLIC	??_C@_0BA@FHNDCDDK@SetLoadingPhase@		; `string'
PUBLIC	??_C@_0BP@MCDDNHPB@SendSelectEmpirePacket?5?9?5Error@ ; `string'
PUBLIC	??_C@_0BF@BJJJIJOC@SetSelectEmpirePhase@	; `string'
PUBLIC	??_C@_0CE@MAKBOJI@Failed?5to?5SendCreateCharacterPa@ ; `string'
PUBLIC	??_C@_0CC@LCEFGOOP@SendSelectCharacterPacket?5?9?5Err@ ; `string'
PUBLIC	??_C@_0GF@HIGNNGB@CPythonNetworkStream?3?3RecvPlaye@ ; `string'
PUBLIC	??_C@_0BP@NACAEM@Failed?5to?5SendChangeNamePacket@ ; `string'
PUBLIC	??_C@_0BA@JBAEOLGH@OnCreateFailure@		; `string'
PUBLIC	??_C@_0BA@FIEGFADN@OnCreateSuccess@		; `string'
PUBLIC	??_C@_0BA@BAMNKIDG@OnDeleteFailure@		; `string'
PUBLIC	??_C@_0BA@NJIPBDGM@OnDeleteSuccess@		; `string'
PUBLIC	??_C@_0N@ICACADKM@OnChangeName@			; `string'
;	COMDAT ??_C@_0N@ICACADKM@OnChangeName@
CONST	SEGMENT
??_C@_0N@ICACADKM@OnChangeName@ DB 'OnChangeName', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@NJIPBDGM@OnDeleteSuccess@
CONST	SEGMENT
??_C@_0BA@NJIPBDGM@OnDeleteSuccess@ DB 'OnDeleteSuccess', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@BAMNKIDG@OnDeleteFailure@
CONST	SEGMENT
??_C@_0BA@BAMNKIDG@OnDeleteFailure@ DB 'OnDeleteFailure', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@FIEGFADN@OnCreateSuccess@
CONST	SEGMENT
??_C@_0BA@FIEGFADN@OnCreateSuccess@ DB 'OnCreateSuccess', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JBAEOLGH@OnCreateFailure@
CONST	SEGMENT
??_C@_0BA@JBAEOLGH@OnCreateFailure@ DB 'OnCreateFailure', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@NACAEM@Failed?5to?5SendChangeNamePacket@
CONST	SEGMENT
??_C@_0BP@NACAEM@Failed?5to?5SendChangeNamePacket@ DB 'Failed to SendChan'
	DB	'geNamePacket', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0GF@HIGNNGB@CPythonNetworkStream?3?3RecvPlaye@
CONST	SEGMENT
??_C@_0GF@HIGNNGB@CPythonNetworkStream?3?3RecvPlaye@ DB 'CPythonNetworkSt'
	DB	'ream::RecvPlayerCreateSuccessPacket - OUT OF RANGE SLOT(%d) >'
	DB	' PLATER_PER_ACCOUNT(%d)', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@LCEFGOOP@SendSelectCharacterPacket?5?9?5Err@
CONST	SEGMENT
??_C@_0CC@LCEFGOOP@SendSelectCharacterPacket?5?9?5Err@ DB 'SendSelectChar'
	DB	'acterPacket - Error', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@MAKBOJI@Failed?5to?5SendCreateCharacterPa@
CONST	SEGMENT
??_C@_0CE@MAKBOJI@Failed?5to?5SendCreateCharacterPa@ DB 'Failed to SendCr'
	DB	'eateCharacterPacket', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@BJJJIJOC@SetSelectEmpirePhase@
CONST	SEGMENT
??_C@_0BF@BJJJIJOC@SetSelectEmpirePhase@ DB 'SetSelectEmpirePhase', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@MCDDNHPB@SendSelectEmpirePacket?5?9?5Error@
CONST	SEGMENT
??_C@_0BP@MCDDNHPB@SendSelectEmpirePacket?5?9?5Error@ DB 'SendSelectEmpir'
	DB	'ePacket - Error', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@FHNDCDDK@SetLoadingPhase@
CONST	SEGMENT
??_C@_0BA@FHNDCDDK@SetLoadingPhase@ DB 'SetLoadingPhase', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@OHJNHIAD@SetSelectCharacterPhase@
CONST	SEGMENT
??_C@_0BI@OHJNHIAD@SetSelectCharacterPhase@ DB 'SetSelectCharacterPhase', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@HMHBDFBF@?$CD?$CD?5Network?5?9?5Select?5Phase?5?$CD?$CD@
CONST	SEGMENT
??_C@_0BN@HMHBDFBF@?$CD?$CD?5Network?5?9?5Select?5Phase?5?$CD?$CD@ DB '##'
	DB	' Network - Select Phase ##', 00H		; `string'
PUBLIC	?__RecvChangeName@CPythonNetworkStream@@IAE_NXZ	; CPythonNetworkStream::__RecvChangeName
PUBLIC	?__RecvPlayerDestroyFailurePacket@CPythonNetworkStream@@IAE_NXZ ; CPythonNetworkStream::__RecvPlayerDestroyFailurePacket
PUBLIC	?__RecvPlayerDestroySuccessPacket@CPythonNetworkStream@@IAE_NXZ ; CPythonNetworkStream::__RecvPlayerDestroySuccessPacket
PUBLIC	?__RecvPlayerCreateFailurePacket@CPythonNetworkStream@@IAE_NXZ ; CPythonNetworkStream::__RecvPlayerCreateFailurePacket
PUBLIC	?__RecvPlayerCreateSuccessPacket@CPythonNetworkStream@@IAE_NXZ ; CPythonNetworkStream::__RecvPlayerCreateSuccessPacket
PUBLIC	?SelectPhase@CPythonNetworkStream@@IAEXXZ	; CPythonNetworkStream::SelectPhase
PUBLIC	?__LeaveSelectPhase@CPythonNetworkStream@@IAEXXZ ; CPythonNetworkStream::__LeaveSelectPhase
PUBLIC	?SendSelectEmpirePacket@CPythonNetworkStream@@QAE_NK@Z ; CPythonNetworkStream::SendSelectEmpirePacket
PUBLIC	?SendSelectCharacterPacket@CPythonNetworkStream@@QAE_NE@Z ; CPythonNetworkStream::SendSelectCharacterPacket
PUBLIC	?SendChangeNamePacket@CPythonNetworkStream@@QAE_NEPBD@Z ; CPythonNetworkStream::SendChangeNamePacket
PUBLIC	?SendCreateCharacterPacket@CPythonNetworkStream@@QAE_NEPBDEEEEEE@Z ; CPythonNetworkStream::SendCreateCharacterPacket
PUBLIC	?SendDestroyCharacterPacket@CPythonNetworkStream@@QAE_NEPBD@Z ; CPythonNetworkStream::SendDestroyCharacterPacket
PUBLIC	?SetSelectPhase@CPythonNetworkStream@@QAEXXZ	; CPythonNetworkStream::SetSelectPhase
; Function compile flags: /Ogtp
; File E:\Metin2_server\SolWayneSF v6\ClientVS22\source\UserInterface\PythonNetworkStreamPhaseSelect.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File E:\Metin2_server\SolWayneSF v6\ClientVS22\source\UserInterface\PythonNetworkStreamPhaseSelect.cpp
; File E:\Metin2_server\SolWayneSF v6\ClientVS22\source\EterLib\FuncObject.h
; File E:\Metin2_server\SolWayneSF v6\ClientVS22\source\UserInterface\PythonNetworkStreamPhaseSelect.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File E:\Metin2_server\SolWayneSF v6\ClientVS22\source\UserInterface\PythonNetworkStreamPhaseSelect.cpp
; File E:\Metin2_server\SolWayneSF v6\ClientVS22\source\EterLib\FuncObject.h
; File E:\Metin2_server\SolWayneSF v6\ClientVS22\source\UserInterface\PythonNetworkStreamPhaseSelect.cpp
;	COMDAT ?SetSelectPhase@CPythonNetworkStream@@QAEXXZ
_TEXT	SEGMENT
?SetSelectPhase@CPythonNetworkStream@@QAEXXZ PROC	; CPythonNetworkStream::SetSelectPhase, COMDAT
; _this$ = ecx

; 10   : {

  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx
  00004	57		 push	 edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 2301 :         return _BUF_SIZE <= _Myres;

  00005	83 be 20 01 00
	00 10		 cmp	 DWORD PTR [esi+288], 16	; 00000010H

; 2292 :         const value_type* _Result = _Bx._Buf;

  0000c	8d 86 0c 01 00
	00		 lea	 eax, DWORD PTR [esi+268]

; 2293 :         if (_Large_string_engaged()) {

  00012	72 06		 jb	 SHORT $LN15@SetSelectP

; 2294 :             _Result = _Unfancy(_Bx._Ptr);

  00014	8b 86 0c 01 00
	00		 mov	 eax, DWORD PTR [esi+268]
$LN15@SetSelectP:

; 4756 :         return _Traits_equal<_Traits>(_Mypair._Myval2._Myptr(), _Mypair._Myval2._Mysize, _Ptr, _Traits::length(_Ptr));

  0001a	6a 06		 push	 6
  0001c	68 00 00 00 00	 push	 OFFSET ??_C@_06HJGPBJLE@Select@
  00021	ff b6 1c 01 00
	00		 push	 DWORD PTR [esi+284]
  00027	50		 push	 eax
  00028	e8 00 00 00 00	 call	 ??$_Traits_equal@U?$char_traits@D@std@@@std@@YA_NQBDI0I@Z ; std::_Traits_equal<std::char_traits<char> >
  0002d	83 c4 10	 add	 esp, 16			; 00000010H
; File E:\Metin2_server\SolWayneSF v6\ClientVS22\source\UserInterface\PythonNetworkStreamPhaseSelect.cpp

; 11   : 	if ("Select" != m_strPhase)

  00030	84 c0		 test	 al, al
  00032	75 1e		 jne	 SHORT $LN31@SetSelectP
; File E:\Metin2_server\SolWayneSF v6\ClientVS22\source\EterLib\FuncObject.h

; 41   : 			if (m_pSelfObject)

  00034	8b 86 68 01 00
	00		 mov	 eax, DWORD PTR [esi+360]
  0003a	85 c0		 test	 eax, eax
  0003c	74 14		 je	 SHORT $LN31@SetSelectP

; 42   : 				if (m_pFuncObject)

  0003e	8b 96 70 01 00
	00		 mov	 edx, DWORD PTR [esi+368]
  00044	85 d2		 test	 edx, edx
  00046	74 0a		 je	 SHORT $LN31@SetSelectP

; 43   : 					(m_pSelfObject->*m_pFuncObject)();

  00048	8b 8e 74 01 00
	00		 mov	 ecx, DWORD PTR [esi+372]
  0004e	03 c8		 add	 ecx, eax
  00050	ff d2		 call	 edx
$LN31@SetSelectP:
; File E:\Metin2_server\SolWayneSF v6\ClientVS22\source\UserInterface\PythonNetworkStreamPhaseSelect.cpp

; 14   : 	Tracen("");

  00052	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@@
  00057	e8 00 00 00 00	 call	 ?Tracen@@YAXPBD@Z	; Tracen
  0005c	83 c4 04	 add	 esp, 4

; 15   : 	Tracen("## Network - Select Phase ##");

  0005f	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@HMHBDFBF@?$CD?$CD?5Network?5?9?5Select?5Phase?5?$CD?$CD@
  00064	e8 00 00 00 00	 call	 ?Tracen@@YAXPBD@Z	; Tracen
  00069	83 c4 04	 add	 esp, 4

; 16   : 	Tracen("");

  0006c	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@@
  00071	e8 00 00 00 00	 call	 ?Tracen@@YAXPBD@Z	; Tracen
  00076	83 c4 04	 add	 esp, 4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 3546 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00079	8d 8e 0c 01 00
	00		 lea	 ecx, DWORD PTR [esi+268]
  0007f	6a 06		 push	 6
  00081	68 00 00 00 00	 push	 OFFSET ??_C@_06HJGPBJLE@Select@
  00086	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File E:\Metin2_server\SolWayneSF v6\ClientVS22\source\UserInterface\PythonNetworkStreamPhaseSelect.cpp

; 24   : 	m_dwChangingPhaseTime = ELTimer_GetMSec();

  0008b	e8 00 00 00 00	 call	 ?ELTimer_GetMSec@@YAKXZ	; ELTimer_GetMSec
  00090	89 86 90 00 00
	00		 mov	 DWORD PTR [esi+144], eax

; 28   : 	if (__DirectEnterMode_IsSet())

  00096	8b ce		 mov	 ecx, esi
; File E:\Metin2_server\SolWayneSF v6\ClientVS22\source\EterLib\FuncObject.h

; 24   : 			m_pSelfObject = pSelfObject;

  00098	89 b6 50 01 00
	00		 mov	 DWORD PTR [esi+336], esi

; 25   : 			m_pFuncObject = pFuncObject;

  0009e	c7 86 58 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+344], OFFSET ?SelectPhase@CPythonNetworkStream@@IAEXXZ ; CPythonNetworkStream::SelectPhase
  000a8	c7 86 5c 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+348], 0

; 24   : 			m_pSelfObject = pSelfObject;

  000b2	89 b6 68 01 00
	00		 mov	 DWORD PTR [esi+360], esi

; 25   : 			m_pFuncObject = pFuncObject;

  000b8	c7 86 70 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+368], OFFSET ?__LeaveSelectPhase@CPythonNetworkStream@@IAEXXZ ; CPythonNetworkStream::__LeaveSelectPhase
  000c2	c7 86 74 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+372], 0
; File E:\Metin2_server\SolWayneSF v6\ClientVS22\source\UserInterface\PythonNetworkStreamPhaseSelect.cpp

; 28   : 	if (__DirectEnterMode_IsSet())

  000cc	e8 00 00 00 00	 call	 ?__DirectEnterMode_IsSet@CPythonNetworkStream@@AAE_NXZ ; CPythonNetworkStream::__DirectEnterMode_IsSet
  000d1	84 c0		 test	 al, al
  000d3	74 07		 je	 SHORT $LN3@SetSelectP

; 29   : 	{
; 30   : 		PyCallClassMemberFunc(m_poHandler, "SetLoadingPhase", Py_BuildValue("()"));	

  000d5	bf 00 00 00 00	 mov	 edi, OFFSET ??_C@_0BA@FHNDCDDK@SetLoadingPhase@

; 31   : 	}

  000da	eb 13		 jmp	 SHORT $LN39@SetSelectP
$LN3@SetSelectP:

; 32   : 	else
; 33   : 	{
; 34   : 		if (IsSelectedEmpire())

  000dc	e8 00 00 00 00	 call	 ?IsSelectedEmpire@CPythonNetworkStream@@QAE_NXZ ; CPythonNetworkStream::IsSelectedEmpire

; 35   : 			PyCallClassMemberFunc(m_poHandler, "SetSelectCharacterPhase", Py_BuildValue("()"));

  000e1	bf 00 00 00 00	 mov	 edi, OFFSET ??_C@_0BI@OHJNHIAD@SetSelectCharacterPhase@
  000e6	84 c0		 test	 al, al
  000e8	75 05		 jne	 SHORT $LN39@SetSelectP

; 36   : 		else
; 37   : 			PyCallClassMemberFunc(m_poHandler, "SetSelectEmpirePhase", Py_BuildValue("()"));

  000ea	bf 00 00 00 00	 mov	 edi, OFFSET ??_C@_0BF@BJJJIJOC@SetSelectEmpirePhase@
$LN39@SetSelectP:

; 38   : 	}
; 39   : }

  000ef	68 00 00 00 00	 push	 OFFSET ??_C@_02HCKGKOFO@?$CI?$CJ@
  000f4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_BuildValue
  000fa	83 c4 04	 add	 esp, 4
  000fd	50		 push	 eax
  000fe	8b 86 78 01 00
	00		 mov	 eax, DWORD PTR [esi+376]
  00104	57		 push	 edi
  00105	50		 push	 eax
  00106	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  0010b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0010e	5f		 pop	 edi
  0010f	5e		 pop	 esi
  00110	59		 pop	 ecx
  00111	c3		 ret	 0
?SetSelectPhase@CPythonNetworkStream@@QAEXXZ ENDP	; CPythonNetworkStream::SetSelectPhase
_TEXT	ENDS
; Function compile flags: /Ogtp
; File E:\Metin2_server\SolWayneSF v6\ClientVS22\source\UserInterface\PythonNetworkStreamPhaseSelect.cpp
;	COMDAT ?SendDestroyCharacterPacket@CPythonNetworkStream@@QAE_NEPBD@Z
_TEXT	SEGMENT
_DestroyCharacterPacket$ = -16				; size = 10
__$ArrayPad$ = -4					; size = 4
_index$ = 8						; size = 1
_szPrivateCode$ = 12					; size = 4
?SendDestroyCharacterPacket@CPythonNetworkStream@@QAE_NEPBD@Z PROC ; CPythonNetworkStream::SendDestroyCharacterPacket, COMDAT
; _this$ = ecx

; 178  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 179  :     TPacketCGDestroyCharacter DestroyCharacterPacket;
; 180  : 
; 181  : 	DestroyCharacterPacket.header = HEADER_CG_PLAYER_DESTROY;
; 182  : 	DestroyCharacterPacket.index = index;

  00010	8a 45 08	 mov	 al, BYTE PTR _index$[ebp]
  00013	56		 push	 esi
  00014	8b f1		 mov	 esi, ecx
  00016	88 45 f1	 mov	 BYTE PTR _DestroyCharacterPacket$[ebp+1], al
  00019	8b 4d 0c	 mov	 ecx, DWORD PTR _szPrivateCode$[ebp]

; 183  : 	strncpy(DestroyCharacterPacket.szPrivateCode, szPrivateCode, PRIVATE_CODE_LENGTH-1);

  0001c	8d 45 f2	 lea	 eax, DWORD PTR _DestroyCharacterPacket$[ebp+2]
  0001f	6a 07		 push	 7
  00021	51		 push	 ecx
  00022	50		 push	 eax
  00023	c6 45 f0 05	 mov	 BYTE PTR _DestroyCharacterPacket$[ebp], 5
  00027	e8 00 00 00 00	 call	 _strncpy
  0002c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 184  : 
; 185  : 	if (!Send(sizeof(TPacketCGDestroyCharacter), &DestroyCharacterPacket))

  0002f	8d 45 f0	 lea	 eax, DWORD PTR _DestroyCharacterPacket$[ebp]
  00032	8b ce		 mov	 ecx, esi
  00034	50		 push	 eax
  00035	6a 0a		 push	 10			; 0000000aH
  00037	e8 00 00 00 00	 call	 ?Send@CNetworkStream@@QAE_NHPBX@Z ; CNetworkStream::Send
  0003c	84 c0		 test	 al, al
  0003e	75 20		 jne	 SHORT $LN2@SendDestro

; 186  : 	{
; 187  : 		Tracen("SendDestroyCharacterPacket");

  00040	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@PMHPNGGJ@SendDestroyCharacterPacket@
  00045	e8 00 00 00 00	 call	 ?Tracen@@YAXPBD@Z	; Tracen
  0004a	83 c4 04	 add	 esp, 4

; 188  : 		return false;

  0004d	32 c0		 xor	 al, al
  0004f	5e		 pop	 esi

; 192  : }

  00050	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00053	33 cd		 xor	 ecx, ebp
  00055	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0005a	8b e5		 mov	 esp, ebp
  0005c	5d		 pop	 ebp
  0005d	c2 08 00	 ret	 8
$LN2@SendDestro:

; 189  : 	}
; 190  : 
; 191  : 	return SendSequence();

  00060	8b ce		 mov	 ecx, esi
  00062	e8 00 00 00 00	 call	 ?SendSequence@CNetworkStream@@QAE_NXZ ; CNetworkStream::SendSequence

; 192  : }

  00067	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0006a	33 cd		 xor	 ecx, ebp
  0006c	5e		 pop	 esi
  0006d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00072	8b e5		 mov	 esp, ebp
  00074	5d		 pop	 ebp
  00075	c2 08 00	 ret	 8
?SendDestroyCharacterPacket@CPythonNetworkStream@@QAE_NEPBD@Z ENDP ; CPythonNetworkStream::SendDestroyCharacterPacket
_TEXT	ENDS
; Function compile flags: /Ogtp
; File E:\Metin2_server\SolWayneSF v6\ClientVS22\source\UserInterface\PythonNetworkStreamPhaseSelect.cpp
;	COMDAT ?SendCreateCharacterPacket@CPythonNetworkStream@@QAE_NEPBDEEEEEE@Z
_TEXT	SEGMENT
_createCharacterPacket$ = -40				; size = 34
__$ArrayPad$ = -4					; size = 4
_index$ = 8						; size = 1
_name$ = 12						; size = 4
_job$ = 16						; size = 1
_shape$ = 20						; size = 1
_byCON$ = 24						; size = 1
_byINT$ = 28						; size = 1
_bySTR$ = 32						; size = 1
_byDEX$ = 36						; size = 1
?SendCreateCharacterPacket@CPythonNetworkStream@@QAE_NEPBDEEEEEE@Z PROC ; CPythonNetworkStream::SendCreateCharacterPacket, COMDAT
; _this$ = ecx

; 195  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 28	 sub	 esp, 40			; 00000028H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 196  : 	TPacketCGCreateCharacter createCharacterPacket;
; 197  : 
; 198  : 	createCharacterPacket.header = HEADER_CG_PLAYER_CREATE;
; 199  : 	createCharacterPacket.index = index;

  00010	8a 45 08	 mov	 al, BYTE PTR _index$[ebp]
  00013	56		 push	 esi
  00014	8b f1		 mov	 esi, ecx
  00016	88 45 d9	 mov	 BYTE PTR _createCharacterPacket$[ebp+1], al
  00019	8b 4d 0c	 mov	 ecx, DWORD PTR _name$[ebp]

; 200  : 	strncpy(createCharacterPacket.name, name, CHARACTER_NAME_MAX_LEN);

  0001c	8d 45 da	 lea	 eax, DWORD PTR _createCharacterPacket$[ebp+2]
  0001f	6a 18		 push	 24			; 00000018H
  00021	51		 push	 ecx
  00022	50		 push	 eax
  00023	c6 45 d8 04	 mov	 BYTE PTR _createCharacterPacket$[ebp], 4
  00027	e8 00 00 00 00	 call	 _strncpy

; 201  : 	createCharacterPacket.job = job;

  0002c	0f b6 45 10	 movzx	 eax, BYTE PTR _job$[ebp]
  00030	83 c4 0c	 add	 esp, 12			; 0000000cH
  00033	66 89 45 f3	 mov	 WORD PTR _createCharacterPacket$[ebp+27], ax

; 202  : 	createCharacterPacket.shape = shape;
; 203  : 	createCharacterPacket.CON = byCON;
; 204  : 	createCharacterPacket.INT = byINT;
; 205  : 	createCharacterPacket.STR = bySTR;
; 206  : 	createCharacterPacket.DEX = byDEX;
; 207  : 
; 208  : 	if (!Send(sizeof(TPacketCGCreateCharacter), &createCharacterPacket))

  00037	8b ce		 mov	 ecx, esi
  00039	8a 45 14	 mov	 al, BYTE PTR _shape$[ebp]
  0003c	88 45 f5	 mov	 BYTE PTR _createCharacterPacket$[ebp+29], al
  0003f	8a 45 18	 mov	 al, BYTE PTR _byCON$[ebp]
  00042	88 45 f6	 mov	 BYTE PTR _createCharacterPacket$[ebp+30], al
  00045	8a 45 1c	 mov	 al, BYTE PTR _byINT$[ebp]
  00048	88 45 f7	 mov	 BYTE PTR _createCharacterPacket$[ebp+31], al
  0004b	8a 45 20	 mov	 al, BYTE PTR _bySTR$[ebp]
  0004e	88 45 f8	 mov	 BYTE PTR _createCharacterPacket$[ebp+32], al
  00051	8a 45 24	 mov	 al, BYTE PTR _byDEX$[ebp]
  00054	88 45 f9	 mov	 BYTE PTR _createCharacterPacket$[ebp+33], al
  00057	8d 45 d8	 lea	 eax, DWORD PTR _createCharacterPacket$[ebp]
  0005a	50		 push	 eax
  0005b	6a 22		 push	 34			; 00000022H
  0005d	e8 00 00 00 00	 call	 ?Send@CNetworkStream@@QAE_NHPBX@Z ; CNetworkStream::Send
  00062	84 c0		 test	 al, al
  00064	75 20		 jne	 SHORT $LN2@SendCreate

; 209  : 	{
; 210  : 		Tracen("Failed to SendCreateCharacterPacket");

  00066	68 00 00 00 00	 push	 OFFSET ??_C@_0CE@MAKBOJI@Failed?5to?5SendCreateCharacterPa@
  0006b	e8 00 00 00 00	 call	 ?Tracen@@YAXPBD@Z	; Tracen
  00070	83 c4 04	 add	 esp, 4

; 211  : 		return false;

  00073	32 c0		 xor	 al, al
  00075	5e		 pop	 esi

; 215  : }

  00076	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00079	33 cd		 xor	 ecx, ebp
  0007b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00080	8b e5		 mov	 esp, ebp
  00082	5d		 pop	 ebp
  00083	c2 20 00	 ret	 32			; 00000020H
$LN2@SendCreate:

; 212  : 	}
; 213  : 
; 214  : 	return SendSequence();

  00086	8b ce		 mov	 ecx, esi
  00088	e8 00 00 00 00	 call	 ?SendSequence@CNetworkStream@@QAE_NXZ ; CNetworkStream::SendSequence

; 215  : }

  0008d	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00090	33 cd		 xor	 ecx, ebp
  00092	5e		 pop	 esi
  00093	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00098	8b e5		 mov	 esp, ebp
  0009a	5d		 pop	 ebp
  0009b	c2 20 00	 ret	 32			; 00000020H
?SendCreateCharacterPacket@CPythonNetworkStream@@QAE_NEPBDEEEEEE@Z ENDP ; CPythonNetworkStream::SendCreateCharacterPacket
_TEXT	ENDS
; Function compile flags: /Ogtp
; File E:\Metin2_server\SolWayneSF v6\ClientVS22\source\UserInterface\PythonNetworkStreamPhaseSelect.cpp
;	COMDAT ?SendChangeNamePacket@CPythonNetworkStream@@QAE_NEPBD@Z
_TEXT	SEGMENT
_ChangeNamePacket$ = -32				; size = 27
__$ArrayPad$ = -4					; size = 4
_index$ = 8						; size = 1
_name$ = 12						; size = 4
?SendChangeNamePacket@CPythonNetworkStream@@QAE_NEPBD@Z PROC ; CPythonNetworkStream::SendChangeNamePacket, COMDAT
; _this$ = ecx

; 218  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 20	 sub	 esp, 32			; 00000020H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 219  : 	TPacketCGChangeName ChangeNamePacket;
; 220  : 	ChangeNamePacket.header = HEADER_CG_CHANGE_NAME;
; 221  : 	ChangeNamePacket.index = index;

  00010	8a 45 08	 mov	 al, BYTE PTR _index$[ebp]
  00013	56		 push	 esi
  00014	8b f1		 mov	 esi, ecx
  00016	88 45 e1	 mov	 BYTE PTR _ChangeNamePacket$[ebp+1], al
  00019	8b 4d 0c	 mov	 ecx, DWORD PTR _name$[ebp]

; 222  : 	strncpy(ChangeNamePacket.name, name, CHARACTER_NAME_MAX_LEN);

  0001c	8d 45 e2	 lea	 eax, DWORD PTR _ChangeNamePacket$[ebp+2]
  0001f	6a 18		 push	 24			; 00000018H
  00021	51		 push	 ecx
  00022	50		 push	 eax
  00023	c6 45 e0 6a	 mov	 BYTE PTR _ChangeNamePacket$[ebp], 106 ; 0000006aH
  00027	e8 00 00 00 00	 call	 _strncpy
  0002c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 223  : 
; 224  : 	if (!Send(sizeof(TPacketCGChangeName), &ChangeNamePacket))

  0002f	8d 45 e0	 lea	 eax, DWORD PTR _ChangeNamePacket$[ebp]
  00032	8b ce		 mov	 ecx, esi
  00034	50		 push	 eax
  00035	6a 1b		 push	 27			; 0000001bH
  00037	e8 00 00 00 00	 call	 ?Send@CNetworkStream@@QAE_NHPBX@Z ; CNetworkStream::Send
  0003c	84 c0		 test	 al, al
  0003e	75 20		 jne	 SHORT $LN2@SendChange

; 225  : 	{
; 226  : 		Tracen("Failed to SendChangeNamePacket");

  00040	68 00 00 00 00	 push	 OFFSET ??_C@_0BP@NACAEM@Failed?5to?5SendChangeNamePacket@
  00045	e8 00 00 00 00	 call	 ?Tracen@@YAXPBD@Z	; Tracen
  0004a	83 c4 04	 add	 esp, 4

; 227  : 		return false;

  0004d	32 c0		 xor	 al, al
  0004f	5e		 pop	 esi

; 231  : }

  00050	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00053	33 cd		 xor	 ecx, ebp
  00055	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0005a	8b e5		 mov	 esp, ebp
  0005c	5d		 pop	 ebp
  0005d	c2 08 00	 ret	 8
$LN2@SendChange:

; 228  : 	}
; 229  : 
; 230  : 	return SendSequence();

  00060	8b ce		 mov	 ecx, esi
  00062	e8 00 00 00 00	 call	 ?SendSequence@CNetworkStream@@QAE_NXZ ; CNetworkStream::SendSequence

; 231  : }

  00067	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0006a	33 cd		 xor	 ecx, ebp
  0006c	5e		 pop	 esi
  0006d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00072	8b e5		 mov	 esp, ebp
  00074	5d		 pop	 ebp
  00075	c2 08 00	 ret	 8
?SendChangeNamePacket@CPythonNetworkStream@@QAE_NEPBD@Z ENDP ; CPythonNetworkStream::SendChangeNamePacket
_TEXT	ENDS
; Function compile flags: /Ogtp
; File E:\Metin2_server\SolWayneSF v6\ClientVS22\source\UserInterface\PythonNetworkStreamPhaseSelect.cpp
;	COMDAT ?SendSelectCharacterPacket@CPythonNetworkStream@@QAE_NE@Z
_TEXT	SEGMENT
_SelectCharacterPacket$ = -4				; size = 2
_Index$ = 8						; size = 1
?SendSelectCharacterPacket@CPythonNetworkStream@@QAE_NE@Z PROC ; CPythonNetworkStream::SendSelectCharacterPacket, COMDAT
; _this$ = ecx

; 162  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 163  : 	TPacketCGSelectCharacter SelectCharacterPacket;
; 164  : 
; 165  : 	SelectCharacterPacket.header = HEADER_CG_PLAYER_SELECT;
; 166  : 	SelectCharacterPacket.player_index = Index;

  00004	8a 45 08	 mov	 al, BYTE PTR _Index$[ebp]
  00007	56		 push	 esi
  00008	88 45 fd	 mov	 BYTE PTR _SelectCharacterPacket$[ebp+1], al
  0000b	8b f1		 mov	 esi, ecx

; 167  : 
; 168  : 	if (!Send(sizeof(TPacketCGSelectCharacter), &SelectCharacterPacket))

  0000d	8d 45 fc	 lea	 eax, DWORD PTR _SelectCharacterPacket$[ebp]
  00010	c6 45 fc 06	 mov	 BYTE PTR _SelectCharacterPacket$[ebp], 6
  00014	50		 push	 eax
  00015	6a 02		 push	 2
  00017	e8 00 00 00 00	 call	 ?Send@CNetworkStream@@QAE_NHPBX@Z ; CNetworkStream::Send
  0001c	84 c0		 test	 al, al
  0001e	75 16		 jne	 SHORT $LN2@SendSelect

; 169  : 	{
; 170  : 		Tracen("SendSelectCharacterPacket - Error");

  00020	68 00 00 00 00	 push	 OFFSET ??_C@_0CC@LCEFGOOP@SendSelectCharacterPacket?5?9?5Err@
  00025	e8 00 00 00 00	 call	 ?Tracen@@YAXPBD@Z	; Tracen
  0002a	83 c4 04	 add	 esp, 4

; 171  : 		return false;

  0002d	32 c0		 xor	 al, al
  0002f	5e		 pop	 esi

; 175  : }

  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c2 04 00	 ret	 4
$LN2@SendSelect:

; 172  : 	}
; 173  : 
; 174  : 	return SendSequence();

  00036	8b ce		 mov	 ecx, esi
  00038	e8 00 00 00 00	 call	 ?SendSequence@CNetworkStream@@QAE_NXZ ; CNetworkStream::SendSequence
  0003d	5e		 pop	 esi

; 175  : }

  0003e	8b e5		 mov	 esp, ebp
  00040	5d		 pop	 ebp
  00041	c2 04 00	 ret	 4
?SendSelectCharacterPacket@CPythonNetworkStream@@QAE_NE@Z ENDP ; CPythonNetworkStream::SendSelectCharacterPacket
_TEXT	ENDS
; Function compile flags: /Ogtp
; File E:\Metin2_server\SolWayneSF v6\ClientVS22\source\UserInterface\PythonNetworkStreamPhaseSelect.cpp
;	COMDAT ?SendSelectEmpirePacket@CPythonNetworkStream@@QAE_NK@Z
_TEXT	SEGMENT
_kPacketEmpire$ = -4					; size = 2
_dwEmpireID$ = 8					; size = 4
?SendSelectEmpirePacket@CPythonNetworkStream@@QAE_NK@Z PROC ; CPythonNetworkStream::SendSelectEmpirePacket, COMDAT
; _this$ = ecx

; 146  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx

; 147  : 	TPacketCGEmpire kPacketEmpire;
; 148  : 	kPacketEmpire.bHeader=HEADER_CG_EMPIRE;
; 149  : 	kPacketEmpire.bEmpire=dwEmpireID;

  00005	8b 5d 08	 mov	 ebx, DWORD PTR _dwEmpireID$[ebp]

; 150  : 
; 151  : 	if (!Send(sizeof(kPacketEmpire), &kPacketEmpire))

  00008	8d 45 fc	 lea	 eax, DWORD PTR _kPacketEmpire$[ebp]
  0000b	56		 push	 esi
  0000c	50		 push	 eax
  0000d	6a 02		 push	 2
  0000f	8b f1		 mov	 esi, ecx
  00011	c6 45 fc 5a	 mov	 BYTE PTR _kPacketEmpire$[ebp], 90 ; 0000005aH
  00015	88 5d fd	 mov	 BYTE PTR _kPacketEmpire$[ebp+1], bl
  00018	e8 00 00 00 00	 call	 ?Send@CNetworkStream@@QAE_NHPBX@Z ; CNetworkStream::Send
  0001d	84 c0		 test	 al, al
  0001f	75 17		 jne	 SHORT $LN2@SendSelect

; 152  : 	{
; 153  : 		Tracen("SendSelectEmpirePacket - Error");

  00021	68 00 00 00 00	 push	 OFFSET ??_C@_0BP@MCDDNHPB@SendSelectEmpirePacket?5?9?5Error@
  00026	e8 00 00 00 00	 call	 ?Tracen@@YAXPBD@Z	; Tracen
  0002b	83 c4 04	 add	 esp, 4

; 154  : 		return false;

  0002e	32 c0		 xor	 al, al
  00030	5e		 pop	 esi

; 159  : }

  00031	5b		 pop	 ebx
  00032	8b e5		 mov	 esp, ebp
  00034	5d		 pop	 ebp
  00035	c2 04 00	 ret	 4
$LN2@SendSelect:

; 155  : 	}
; 156  : 
; 157  : 	SetEmpireID(dwEmpireID);

  00038	53		 push	 ebx
  00039	8b ce		 mov	 ecx, esi
  0003b	e8 00 00 00 00	 call	 ?SetEmpireID@CPythonNetworkStream@@QAEXK@Z ; CPythonNetworkStream::SetEmpireID

; 158  : 	return SendSequence();

  00040	e8 00 00 00 00	 call	 ?SendSequence@CNetworkStream@@QAE_NXZ ; CNetworkStream::SendSequence
  00045	5e		 pop	 esi

; 159  : }

  00046	5b		 pop	 ebx
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c2 04 00	 ret	 4
?SendSelectEmpirePacket@CPythonNetworkStream@@QAE_NK@Z ENDP ; CPythonNetworkStream::SendSelectEmpirePacket
_TEXT	ENDS
; Function compile flags: /Ogtp
; File E:\Metin2_server\SolWayneSF v6\ClientVS22\source\UserInterface\PythonNetworkStream.h
;	COMDAT ?__LeaveSelectPhase@CPythonNetworkStream@@IAEXXZ
_TEXT	SEGMENT
?__LeaveSelectPhase@CPythonNetworkStream@@IAEXXZ PROC	; CPythonNetworkStream::__LeaveSelectPhase, COMDAT
; _this$ = ecx

; 624  : 		void __LeaveSelectPhase() {}

  00000	c2 00 00	 ret	 0
?__LeaveSelectPhase@CPythonNetworkStream@@IAEXXZ ENDP	; CPythonNetworkStream::__LeaveSelectPhase
_TEXT	ENDS
; Function compile flags: /Ogtp
; File E:\Metin2_server\SolWayneSF v6\ClientVS22\source\UserInterface\PythonNetworkStreamPhaseSelect.cpp
;	COMDAT ?SelectPhase@CPythonNetworkStream@@IAEXXZ
_TEXT	SEGMENT
_header$ = -33						; size = 1
_PointChange$1 = -32					; size = 25
__$ArrayPad$ = -4					; size = 4
?SelectPhase@CPythonNetworkStream@@IAEXXZ PROC		; CPythonNetworkStream::SelectPhase, COMDAT
; _this$ = ecx

; 42   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 28	 sub	 esp, 40			; 00000028H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi
  00011	57		 push	 edi

; 43   : 	TPacketHeader header;
; 44   : 
; 45   : 	if (!CheckPacket(&header))

  00012	8d 45 df	 lea	 eax, DWORD PTR _header$[ebp]
  00015	8b f1		 mov	 esi, ecx
  00017	50		 push	 eax
  00018	e8 00 00 00 00	 call	 ?CheckPacket@CPythonNetworkStream@@IAE_NPAE@Z ; CPythonNetworkStream::CheckPacket
  0001d	84 c0		 test	 al, al
  0001f	0f 84 46 01 00
	00		 je	 $LN1@SelectPhas

; 46   : 		return;
; 47   : 
; 48   : 	switch (header)

  00025	0f b6 7d df	 movzx	 edi, BYTE PTR _header$[ebp]
  00029	8d 47 fa	 lea	 eax, DWORD PTR [edi-6]
  0002c	3d f9 00 00 00	 cmp	 eax, 249		; 000000f9H
  00031	0f 87 2c 01 00
	00		 ja	 $LN31@SelectPhas
  00037	0f b6 80 00 00
	00 00		 movzx	 eax, BYTE PTR $LN33@SelectPhas[eax]
  0003e	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN34@SelectPhas[eax*4]
$LN5@SelectPhas:

; 49   : 	{
; 50   : 		case HEADER_GC_PHASE:
; 51   : 			if (RecvPhasePacket())

  00045	8b ce		 mov	 ecx, esi
  00047	e8 00 00 00 00	 call	 ?RecvPhasePacket@CPythonNetworkStream@@IAE_NXZ ; CPythonNetworkStream::RecvPhasePacket

; 52   : 				return;	
; 53   : 			break;

  0004c	e9 0e 01 00 00	 jmp	 $LN36@SelectPhas
$LN7@SelectPhas:

; 54   : 
; 55   : 		case HEADER_GC_EMPIRE:
; 56   : 			if (__RecvEmpirePacket())

  00051	8b ce		 mov	 ecx, esi
  00053	e8 00 00 00 00	 call	 ?__RecvEmpirePacket@CPythonNetworkStream@@IAE_NXZ ; CPythonNetworkStream::__RecvEmpirePacket

; 57   : 				return;
; 58   : 			break;

  00058	e9 02 01 00 00	 jmp	 $LN36@SelectPhas
$LN9@SelectPhas:

; 59   : 
; 60   : 		case HEADER_GC_LOGIN_SUCCESS3:
; 61   : 			if (__RecvLoginSuccessPacket3())

  0005d	8b ce		 mov	 ecx, esi
  0005f	e8 00 00 00 00	 call	 ?__RecvLoginSuccessPacket3@CPythonNetworkStream@@IAE_NXZ ; CPythonNetworkStream::__RecvLoginSuccessPacket3

; 62   : 				return;
; 63   : 			break;

  00064	e9 f6 00 00 00	 jmp	 $LN36@SelectPhas
$LN11@SelectPhas:

; 64   : 
; 65   : 		case HEADER_GC_LOGIN_SUCCESS4:
; 66   : 			if (__RecvLoginSuccessPacket4())

  00069	8b ce		 mov	 ecx, esi
  0006b	e8 00 00 00 00	 call	 ?__RecvLoginSuccessPacket4@CPythonNetworkStream@@IAE_NXZ ; CPythonNetworkStream::__RecvLoginSuccessPacket4

; 67   : 				return;
; 68   : 			break;

  00070	e9 ea 00 00 00	 jmp	 $LN36@SelectPhas
$LN13@SelectPhas:

; 69   : 
; 70   : 
; 71   : 		case HEADER_GC_PLAYER_CREATE_SUCCESS:
; 72   : 			if (__RecvPlayerCreateSuccessPacket())

  00075	8b ce		 mov	 ecx, esi
  00077	e8 00 00 00 00	 call	 ?__RecvPlayerCreateSuccessPacket@CPythonNetworkStream@@IAE_NXZ ; CPythonNetworkStream::__RecvPlayerCreateSuccessPacket

; 73   : 				return;
; 74   : 			break;

  0007c	e9 de 00 00 00	 jmp	 $LN36@SelectPhas
$LN15@SelectPhas:

; 75   : 
; 76   : 		case HEADER_GC_PLAYER_CREATE_FAILURE:
; 77   : 			if (__RecvPlayerCreateFailurePacket())

  00081	8b ce		 mov	 ecx, esi
  00083	e8 00 00 00 00	 call	 ?__RecvPlayerCreateFailurePacket@CPythonNetworkStream@@IAE_NXZ ; CPythonNetworkStream::__RecvPlayerCreateFailurePacket

; 78   : 				return;
; 79   : 			break;

  00088	e9 d2 00 00 00	 jmp	 $LN36@SelectPhas
$LN17@SelectPhas:

; 80   : 
; 81   : 		case HEADER_GC_PLAYER_DELETE_WRONG_SOCIAL_ID:
; 82   : 			if (__RecvPlayerDestroyFailurePacket())

  0008d	8b ce		 mov	 ecx, esi
  0008f	e8 00 00 00 00	 call	 ?__RecvPlayerDestroyFailurePacket@CPythonNetworkStream@@IAE_NXZ ; CPythonNetworkStream::__RecvPlayerDestroyFailurePacket

; 83   : 				return;
; 84   : 			break;

  00094	e9 c6 00 00 00	 jmp	 $LN36@SelectPhas
$LN19@SelectPhas:

; 85   : 
; 86   : 		case HEADER_GC_PLAYER_DELETE_SUCCESS:
; 87   : 			if (__RecvPlayerDestroySuccessPacket())

  00099	8b ce		 mov	 ecx, esi
  0009b	e8 00 00 00 00	 call	 ?__RecvPlayerDestroySuccessPacket@CPythonNetworkStream@@IAE_NXZ ; CPythonNetworkStream::__RecvPlayerDestroySuccessPacket

; 88   : 				return;
; 89   : 			break;

  000a0	e9 ba 00 00 00	 jmp	 $LN36@SelectPhas
$LN21@SelectPhas:

; 90   : 
; 91   : 		case HEADER_GC_CHANGE_NAME:
; 92   : 			if (__RecvChangeName())

  000a5	8b ce		 mov	 ecx, esi
  000a7	e8 00 00 00 00	 call	 ?__RecvChangeName@CPythonNetworkStream@@IAE_NXZ ; CPythonNetworkStream::__RecvChangeName

; 93   : 				return;
; 94   : 			break;

  000ac	e9 ae 00 00 00	 jmp	 $LN36@SelectPhas
$LN23@SelectPhas:

; 95   : 
; 96   : 		case HEADER_GC_HANDSHAKE:
; 97   : 			RecvHandshakePacket();

  000b1	8b ce		 mov	 ecx, esi
  000b3	e8 00 00 00 00	 call	 ?RecvHandshakePacket@CPythonNetworkStream@@QAE_NXZ ; CPythonNetworkStream::RecvHandshakePacket

; 143  : }

  000b8	5f		 pop	 edi
  000b9	5e		 pop	 esi
  000ba	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000bd	33 cd		 xor	 ecx, ebp
  000bf	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000c4	8b e5		 mov	 esp, ebp
  000c6	5d		 pop	 ebp
  000c7	c3		 ret	 0
$LN24@SelectPhas:

; 98   : 			return;
; 99   : 			break;
; 100  : 
; 101  : 		case HEADER_GC_HANDSHAKE_OK:
; 102  : 			RecvHandshakeOKPacket();

  000c8	8b ce		 mov	 ecx, esi
  000ca	e8 00 00 00 00	 call	 ?RecvHandshakeOKPacket@CPythonNetworkStream@@QAE_NXZ ; CPythonNetworkStream::RecvHandshakeOKPacket

; 143  : }

  000cf	5f		 pop	 edi
  000d0	5e		 pop	 esi
  000d1	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000d4	33 cd		 xor	 ecx, ebp
  000d6	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000db	8b e5		 mov	 esp, ebp
  000dd	5d		 pop	 ebp
  000de	c3		 ret	 0
$LN25@SelectPhas:

; 103  : 			return;
; 104  : 			break;
; 105  : 
; 106  : 		case HEADER_GC_HYBRIDCRYPT_KEYS:
; 107  : 			RecvHybridCryptKeyPacket();

  000df	8b ce		 mov	 ecx, esi
  000e1	e8 00 00 00 00	 call	 ?RecvHybridCryptKeyPacket@CPythonNetworkStream@@QAE_NXZ ; CPythonNetworkStream::RecvHybridCryptKeyPacket

; 143  : }

  000e6	5f		 pop	 edi
  000e7	5e		 pop	 esi
  000e8	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000eb	33 cd		 xor	 ecx, ebp
  000ed	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000f2	8b e5		 mov	 esp, ebp
  000f4	5d		 pop	 ebp
  000f5	c3		 ret	 0
$LN26@SelectPhas:

; 108  : 			return;
; 109  : 			break;
; 110  : 
; 111  : 		case HEADER_GC_HYBRIDCRYPT_SDB:
; 112  : 			RecvHybridCryptSDBPacket();

  000f6	8b ce		 mov	 ecx, esi
  000f8	e8 00 00 00 00	 call	 ?RecvHybridCryptSDBPacket@CPythonNetworkStream@@QAE_NXZ ; CPythonNetworkStream::RecvHybridCryptSDBPacket

; 143  : }

  000fd	5f		 pop	 edi
  000fe	5e		 pop	 esi
  000ff	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00102	33 cd		 xor	 ecx, ebp
  00104	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00109	8b e5		 mov	 esp, ebp
  0010b	5d		 pop	 ebp
  0010c	c3		 ret	 0
$LN27@SelectPhas:

; 113  : 			return;
; 114  : 			break;
; 115  : 
; 116  : 
; 117  : #ifdef _IMPROVED_PACKET_ENCRYPTION_
; 118  : 		case HEADER_GC_KEY_AGREEMENT:
; 119  : 			RecvKeyAgreementPacket();

  0010d	8b ce		 mov	 ecx, esi
  0010f	e8 00 00 00 00	 call	 ?RecvKeyAgreementPacket@CPythonNetworkStream@@QAE_NXZ ; CPythonNetworkStream::RecvKeyAgreementPacket

; 143  : }

  00114	5f		 pop	 edi
  00115	5e		 pop	 esi
  00116	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00119	33 cd		 xor	 ecx, ebp
  0011b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00120	8b e5		 mov	 esp, ebp
  00122	5d		 pop	 ebp
  00123	c3		 ret	 0
$LN28@SelectPhas:

; 120  : 			return;
; 121  : 			break;
; 122  : 
; 123  : 		case HEADER_GC_KEY_AGREEMENT_COMPLETED:
; 124  : 			RecvKeyAgreementCompletedPacket();

  00124	8b ce		 mov	 ecx, esi
  00126	e8 00 00 00 00	 call	 ?RecvKeyAgreementCompletedPacket@CPythonNetworkStream@@QAE_NXZ ; CPythonNetworkStream::RecvKeyAgreementCompletedPacket

; 143  : }

  0012b	5f		 pop	 edi
  0012c	5e		 pop	 esi
  0012d	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00130	33 cd		 xor	 ecx, ebp
  00132	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00137	8b e5		 mov	 esp, ebp
  00139	5d		 pop	 ebp
  0013a	c3		 ret	 0
$LN29@SelectPhas:

; 125  : 			return;
; 126  : 			break;
; 127  : #endif
; 128  : 
; 129  : 		case HEADER_GC_PLAYER_POINT_CHANGE:
; 130  : 			TPacketGCPointChange PointChange;
; 131  : 			Recv(sizeof(TPacketGCPointChange), &PointChange);

  0013b	8d 45 e0	 lea	 eax, DWORD PTR _PointChange$1[ebp]
  0013e	8b ce		 mov	 ecx, esi
  00140	50		 push	 eax
  00141	6a 19		 push	 25			; 00000019H
  00143	e8 00 00 00 00	 call	 ?Recv@CNetworkStream@@QAE_NHPAX@Z ; CNetworkStream::Recv

; 143  : }

  00148	5f		 pop	 edi
  00149	5e		 pop	 esi
  0014a	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0014d	33 cd		 xor	 ecx, ebp
  0014f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00154	8b e5		 mov	 esp, ebp
  00156	5d		 pop	 ebp
  00157	c3		 ret	 0
$LN30@SelectPhas:

; 132  : 			return;
; 133  : 			break;
; 134  : 
; 135  : 		///////////////////////////////////////////////////////////////////////////////////////////
; 136  : 		case HEADER_GC_PING:
; 137  : 			if (RecvPingPacket())

  00158	8b ce		 mov	 ecx, esi
  0015a	e8 00 00 00 00	 call	 ?RecvPingPacket@CPythonNetworkStream@@IAE_NXZ ; CPythonNetworkStream::RecvPingPacket
$LN36@SelectPhas:

; 138  : 				return;
; 139  : 			break;
; 140  : 	}
; 141  : 
; 142  : 	RecvErrorPacket(header);

  0015f	84 c0		 test	 al, al
  00161	75 08		 jne	 SHORT $LN1@SelectPhas
$LN31@SelectPhas:
  00163	57		 push	 edi
  00164	8b ce		 mov	 ecx, esi
  00166	e8 00 00 00 00	 call	 ?RecvErrorPacket@CPythonNetworkStream@@IAE_NH@Z ; CPythonNetworkStream::RecvErrorPacket
$LN1@SelectPhas:

; 143  : }

  0016b	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0016e	5f		 pop	 edi
  0016f	33 cd		 xor	 ecx, ebp
  00171	5e		 pop	 esi
  00172	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00177	8b e5		 mov	 esp, ebp
  00179	5d		 pop	 ebp
  0017a	c3		 ret	 0
  0017b	90		 npad	 1
$LN34@SelectPhas:
  0017c	00 00 00 00	 DD	 $LN9@SelectPhas
  00180	00 00 00 00	 DD	 $LN13@SelectPhas
  00184	00 00 00 00	 DD	 $LN15@SelectPhas
  00188	00 00 00 00	 DD	 $LN19@SelectPhas
  0018c	00 00 00 00	 DD	 $LN17@SelectPhas
  00190	00 00 00 00	 DD	 $LN29@SelectPhas
  00194	00 00 00 00	 DD	 $LN11@SelectPhas
  00198	00 00 00 00	 DD	 $LN30@SelectPhas
  0019c	00 00 00 00	 DD	 $LN7@SelectPhas
  001a0	00 00 00 00	 DD	 $LN21@SelectPhas
  001a4	00 00 00 00	 DD	 $LN25@SelectPhas
  001a8	00 00 00 00	 DD	 $LN26@SelectPhas
  001ac	00 00 00 00	 DD	 $LN28@SelectPhas
  001b0	00 00 00 00	 DD	 $LN27@SelectPhas
  001b4	00 00 00 00	 DD	 $LN24@SelectPhas
  001b8	00 00 00 00	 DD	 $LN5@SelectPhas
  001bc	00 00 00 00	 DD	 $LN23@SelectPhas
  001c0	00 00 00 00	 DD	 $LN31@SelectPhas
$LN33@SelectPhas:
  001c4	00		 DB	 0
  001c5	11		 DB	 17			; 00000011H
  001c6	01		 DB	 1
  001c7	02		 DB	 2
  001c8	03		 DB	 3
  001c9	04		 DB	 4
  001ca	11		 DB	 17			; 00000011H
  001cb	11		 DB	 17			; 00000011H
  001cc	11		 DB	 17			; 00000011H
  001cd	11		 DB	 17			; 00000011H
  001ce	11		 DB	 17			; 00000011H
  001cf	05		 DB	 5
  001d0	11		 DB	 17			; 00000011H
  001d1	11		 DB	 17			; 00000011H
  001d2	11		 DB	 17			; 00000011H
  001d3	11		 DB	 17			; 00000011H
  001d4	11		 DB	 17			; 00000011H
  001d5	11		 DB	 17			; 00000011H
  001d6	11		 DB	 17			; 00000011H
  001d7	11		 DB	 17			; 00000011H
  001d8	11		 DB	 17			; 00000011H
  001d9	11		 DB	 17			; 00000011H
  001da	11		 DB	 17			; 00000011H
  001db	11		 DB	 17			; 00000011H
  001dc	11		 DB	 17			; 00000011H
  001dd	11		 DB	 17			; 00000011H
  001de	06		 DB	 6
  001df	11		 DB	 17			; 00000011H
  001e0	11		 DB	 17			; 00000011H
  001e1	11		 DB	 17			; 00000011H
  001e2	11		 DB	 17			; 00000011H
  001e3	11		 DB	 17			; 00000011H
  001e4	11		 DB	 17			; 00000011H
  001e5	11		 DB	 17			; 00000011H
  001e6	11		 DB	 17			; 00000011H
  001e7	11		 DB	 17			; 00000011H
  001e8	11		 DB	 17			; 00000011H
  001e9	11		 DB	 17			; 00000011H
  001ea	07		 DB	 7
  001eb	11		 DB	 17			; 00000011H
  001ec	11		 DB	 17			; 00000011H
  001ed	11		 DB	 17			; 00000011H
  001ee	11		 DB	 17			; 00000011H
  001ef	11		 DB	 17			; 00000011H
  001f0	11		 DB	 17			; 00000011H
  001f1	11		 DB	 17			; 00000011H
  001f2	11		 DB	 17			; 00000011H
  001f3	11		 DB	 17			; 00000011H
  001f4	11		 DB	 17			; 00000011H
  001f5	11		 DB	 17			; 00000011H
  001f6	11		 DB	 17			; 00000011H
  001f7	11		 DB	 17			; 00000011H
  001f8	11		 DB	 17			; 00000011H
  001f9	11		 DB	 17			; 00000011H
  001fa	11		 DB	 17			; 00000011H
  001fb	11		 DB	 17			; 00000011H
  001fc	11		 DB	 17			; 00000011H
  001fd	11		 DB	 17			; 00000011H
  001fe	11		 DB	 17			; 00000011H
  001ff	11		 DB	 17			; 00000011H
  00200	11		 DB	 17			; 00000011H
  00201	11		 DB	 17			; 00000011H
  00202	11		 DB	 17			; 00000011H
  00203	11		 DB	 17			; 00000011H
  00204	11		 DB	 17			; 00000011H
  00205	11		 DB	 17			; 00000011H
  00206	11		 DB	 17			; 00000011H
  00207	11		 DB	 17			; 00000011H
  00208	11		 DB	 17			; 00000011H
  00209	11		 DB	 17			; 00000011H
  0020a	11		 DB	 17			; 00000011H
  0020b	11		 DB	 17			; 00000011H
  0020c	11		 DB	 17			; 00000011H
  0020d	11		 DB	 17			; 00000011H
  0020e	11		 DB	 17			; 00000011H
  0020f	11		 DB	 17			; 00000011H
  00210	11		 DB	 17			; 00000011H
  00211	11		 DB	 17			; 00000011H
  00212	11		 DB	 17			; 00000011H
  00213	11		 DB	 17			; 00000011H
  00214	11		 DB	 17			; 00000011H
  00215	11		 DB	 17			; 00000011H
  00216	11		 DB	 17			; 00000011H
  00217	11		 DB	 17			; 00000011H
  00218	08		 DB	 8
  00219	11		 DB	 17			; 00000011H
  0021a	11		 DB	 17			; 00000011H
  0021b	11		 DB	 17			; 00000011H
  0021c	11		 DB	 17			; 00000011H
  0021d	11		 DB	 17			; 00000011H
  0021e	11		 DB	 17			; 00000011H
  0021f	11		 DB	 17			; 00000011H
  00220	11		 DB	 17			; 00000011H
  00221	11		 DB	 17			; 00000011H
  00222	11		 DB	 17			; 00000011H
  00223	11		 DB	 17			; 00000011H
  00224	11		 DB	 17			; 00000011H
  00225	11		 DB	 17			; 00000011H
  00226	11		 DB	 17			; 00000011H
  00227	11		 DB	 17			; 00000011H
  00228	11		 DB	 17			; 00000011H
  00229	09		 DB	 9
  0022a	11		 DB	 17			; 00000011H
  0022b	11		 DB	 17			; 00000011H
  0022c	11		 DB	 17			; 00000011H
  0022d	11		 DB	 17			; 00000011H
  0022e	11		 DB	 17			; 00000011H
  0022f	11		 DB	 17			; 00000011H
  00230	11		 DB	 17			; 00000011H
  00231	11		 DB	 17			; 00000011H
  00232	11		 DB	 17			; 00000011H
  00233	11		 DB	 17			; 00000011H
  00234	11		 DB	 17			; 00000011H
  00235	11		 DB	 17			; 00000011H
  00236	11		 DB	 17			; 00000011H
  00237	11		 DB	 17			; 00000011H
  00238	11		 DB	 17			; 00000011H
  00239	11		 DB	 17			; 00000011H
  0023a	11		 DB	 17			; 00000011H
  0023b	11		 DB	 17			; 00000011H
  0023c	11		 DB	 17			; 00000011H
  0023d	11		 DB	 17			; 00000011H
  0023e	11		 DB	 17			; 00000011H
  0023f	11		 DB	 17			; 00000011H
  00240	11		 DB	 17			; 00000011H
  00241	11		 DB	 17			; 00000011H
  00242	11		 DB	 17			; 00000011H
  00243	11		 DB	 17			; 00000011H
  00244	11		 DB	 17			; 00000011H
  00245	11		 DB	 17			; 00000011H
  00246	11		 DB	 17			; 00000011H
  00247	11		 DB	 17			; 00000011H
  00248	11		 DB	 17			; 00000011H
  00249	11		 DB	 17			; 00000011H
  0024a	11		 DB	 17			; 00000011H
  0024b	11		 DB	 17			; 00000011H
  0024c	11		 DB	 17			; 00000011H
  0024d	11		 DB	 17			; 00000011H
  0024e	11		 DB	 17			; 00000011H
  0024f	11		 DB	 17			; 00000011H
  00250	11		 DB	 17			; 00000011H
  00251	11		 DB	 17			; 00000011H
  00252	11		 DB	 17			; 00000011H
  00253	11		 DB	 17			; 00000011H
  00254	11		 DB	 17			; 00000011H
  00255	11		 DB	 17			; 00000011H
  00256	0a		 DB	 10			; 0000000aH
  00257	0b		 DB	 11			; 0000000bH
  00258	11		 DB	 17			; 00000011H
  00259	11		 DB	 17			; 00000011H
  0025a	11		 DB	 17			; 00000011H
  0025b	11		 DB	 17			; 00000011H
  0025c	11		 DB	 17			; 00000011H
  0025d	11		 DB	 17			; 00000011H
  0025e	11		 DB	 17			; 00000011H
  0025f	11		 DB	 17			; 00000011H
  00260	11		 DB	 17			; 00000011H
  00261	11		 DB	 17			; 00000011H
  00262	11		 DB	 17			; 00000011H
  00263	11		 DB	 17			; 00000011H
  00264	11		 DB	 17			; 00000011H
  00265	11		 DB	 17			; 00000011H
  00266	11		 DB	 17			; 00000011H
  00267	11		 DB	 17			; 00000011H
  00268	11		 DB	 17			; 00000011H
  00269	11		 DB	 17			; 00000011H
  0026a	11		 DB	 17			; 00000011H
  0026b	11		 DB	 17			; 00000011H
  0026c	11		 DB	 17			; 00000011H
  0026d	11		 DB	 17			; 00000011H
  0026e	11		 DB	 17			; 00000011H
  0026f	11		 DB	 17			; 00000011H
  00270	11		 DB	 17			; 00000011H
  00271	11		 DB	 17			; 00000011H
  00272	11		 DB	 17			; 00000011H
  00273	11		 DB	 17			; 00000011H
  00274	11		 DB	 17			; 00000011H
  00275	11		 DB	 17			; 00000011H
  00276	11		 DB	 17			; 00000011H
  00277	11		 DB	 17			; 00000011H
  00278	11		 DB	 17			; 00000011H
  00279	11		 DB	 17			; 00000011H
  0027a	11		 DB	 17			; 00000011H
  0027b	11		 DB	 17			; 00000011H
  0027c	11		 DB	 17			; 00000011H
  0027d	11		 DB	 17			; 00000011H
  0027e	11		 DB	 17			; 00000011H
  0027f	11		 DB	 17			; 00000011H
  00280	11		 DB	 17			; 00000011H
  00281	11		 DB	 17			; 00000011H
  00282	11		 DB	 17			; 00000011H
  00283	11		 DB	 17			; 00000011H
  00284	11		 DB	 17			; 00000011H
  00285	11		 DB	 17			; 00000011H
  00286	11		 DB	 17			; 00000011H
  00287	11		 DB	 17			; 00000011H
  00288	11		 DB	 17			; 00000011H
  00289	11		 DB	 17			; 00000011H
  0028a	11		 DB	 17			; 00000011H
  0028b	11		 DB	 17			; 00000011H
  0028c	11		 DB	 17			; 00000011H
  0028d	11		 DB	 17			; 00000011H
  0028e	11		 DB	 17			; 00000011H
  0028f	11		 DB	 17			; 00000011H
  00290	11		 DB	 17			; 00000011H
  00291	11		 DB	 17			; 00000011H
  00292	11		 DB	 17			; 00000011H
  00293	11		 DB	 17			; 00000011H
  00294	11		 DB	 17			; 00000011H
  00295	11		 DB	 17			; 00000011H
  00296	11		 DB	 17			; 00000011H
  00297	11		 DB	 17			; 00000011H
  00298	11		 DB	 17			; 00000011H
  00299	11		 DB	 17			; 00000011H
  0029a	11		 DB	 17			; 00000011H
  0029b	11		 DB	 17			; 00000011H
  0029c	11		 DB	 17			; 00000011H
  0029d	11		 DB	 17			; 00000011H
  0029e	11		 DB	 17			; 00000011H
  0029f	11		 DB	 17			; 00000011H
  002a0	11		 DB	 17			; 00000011H
  002a1	11		 DB	 17			; 00000011H
  002a2	11		 DB	 17			; 00000011H
  002a3	11		 DB	 17			; 00000011H
  002a4	11		 DB	 17			; 00000011H
  002a5	11		 DB	 17			; 00000011H
  002a6	11		 DB	 17			; 00000011H
  002a7	11		 DB	 17			; 00000011H
  002a8	11		 DB	 17			; 00000011H
  002a9	11		 DB	 17			; 00000011H
  002aa	11		 DB	 17			; 00000011H
  002ab	11		 DB	 17			; 00000011H
  002ac	11		 DB	 17			; 00000011H
  002ad	11		 DB	 17			; 00000011H
  002ae	11		 DB	 17			; 00000011H
  002af	11		 DB	 17			; 00000011H
  002b0	11		 DB	 17			; 00000011H
  002b1	11		 DB	 17			; 00000011H
  002b2	11		 DB	 17			; 00000011H
  002b3	11		 DB	 17			; 00000011H
  002b4	11		 DB	 17			; 00000011H
  002b5	11		 DB	 17			; 00000011H
  002b6	11		 DB	 17			; 00000011H
  002b7	11		 DB	 17			; 00000011H
  002b8	0c		 DB	 12			; 0000000cH
  002b9	0d		 DB	 13			; 0000000dH
  002ba	0e		 DB	 14			; 0000000eH
  002bb	0f		 DB	 15			; 0000000fH
  002bc	11		 DB	 17			; 00000011H
  002bd	10		 DB	 16			; 00000010H
?SelectPhase@CPythonNetworkStream@@IAEXXZ ENDP		; CPythonNetworkStream::SelectPhase
_TEXT	ENDS
; Function compile flags: /Ogtp
; File E:\Metin2_server\SolWayneSF v6\ClientVS22\source\UserInterface\PythonNetworkStreamPhaseSelect.cpp
;	COMDAT ?__RecvPlayerCreateSuccessPacket@CPythonNetworkStream@@IAE_NXZ
_TEXT	SEGMENT
_kCreateSuccessPacket$ = -72				; size = 67
__$ArrayPad$ = -4					; size = 4
?__RecvPlayerCreateSuccessPacket@CPythonNetworkStream@@IAE_NXZ PROC ; CPythonNetworkStream::__RecvPlayerCreateSuccessPacket, COMDAT
; _this$ = ecx

; 234  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi

; 235  : 	TPacketGCPlayerCreateSuccess kCreateSuccessPacket;
; 236  : 
; 237  : 	if (!Recv(sizeof(kCreateSuccessPacket), &kCreateSuccessPacket))

  00011	8d 45 b8	 lea	 eax, DWORD PTR _kCreateSuccessPacket$[ebp]
  00014	8b f1		 mov	 esi, ecx
  00016	50		 push	 eax
  00017	6a 43		 push	 67			; 00000043H
  00019	e8 00 00 00 00	 call	 ?Recv@CNetworkStream@@QAE_NHPAX@Z ; CNetworkStream::Recv
  0001e	84 c0		 test	 al, al
  00020	75 0f		 jne	 SHORT $LN2@RecvPlayer
  00022	5e		 pop	 esi

; 249  : 	return true;
; 250  : }

  00023	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00026	33 cd		 xor	 ecx, ebp
  00028	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002d	8b e5		 mov	 esp, ebp
  0002f	5d		 pop	 ebp
  00030	c3		 ret	 0
$LN2@RecvPlayer:

; 238  : 		return false;
; 239  : 
; 240  : 	if (kCreateSuccessPacket.bAccountCharacterSlot>=PLAYER_PER_ACCOUNT4)

  00031	8a 45 b9	 mov	 al, BYTE PTR _kCreateSuccessPacket$[ebp+1]
  00034	3c 04		 cmp	 al, 4
  00036	72 24		 jb	 SHORT $LN3@RecvPlayer

; 241  : 	{
; 242  : 		TraceError("CPythonNetworkStream::RecvPlayerCreateSuccessPacket - OUT OF RANGE SLOT(%d) > PLATER_PER_ACCOUNT(%d)",

  00038	6a 04		 push	 4
  0003a	0f b6 c0	 movzx	 eax, al
  0003d	50		 push	 eax
  0003e	68 00 00 00 00	 push	 OFFSET ??_C@_0GF@HIGNNGB@CPythonNetworkStream?3?3RecvPlaye@
  00043	e8 00 00 00 00	 call	 ?TraceError@@YAXPBDZZ	; TraceError
  00048	83 c4 0c	 add	 esp, 12			; 0000000cH

; 249  : 	return true;
; 250  : }

  0004b	b0 01		 mov	 al, 1
  0004d	5e		 pop	 esi
  0004e	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00051	33 cd		 xor	 ecx, ebp
  00053	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00058	8b e5		 mov	 esp, ebp
  0005a	5d		 pop	 ebp
  0005b	c3		 ret	 0
$LN3@RecvPlayer:

; 243  : 			kCreateSuccessPacket.bAccountCharacterSlot, PLAYER_PER_ACCOUNT4);
; 244  : 		return true;
; 245  : 	}
; 246  : 
; 247  : 	m_akSimplePlayerInfo[kCreateSuccessPacket.bAccountCharacterSlot]=kCreateSuccessPacket.kSimplePlayerInfomation;

  0005c	0f 10 45 ba	 movups	 xmm0, XMMWORD PTR _kCreateSuccessPacket$[ebp+2]
  00060	0f b6 c8	 movzx	 ecx, al
  00063	8b c1		 mov	 eax, ecx
  00065	c1 e0 06	 shl	 eax, 6
  00068	03 c6		 add	 eax, esi
  0006a	03 c8		 add	 ecx, eax

; 248  : 	PyCallClassMemberFunc(m_apoPhaseWnd[PHASE_WINDOW_CREATE], "OnCreateSuccess", Py_BuildValue("()"));

  0006c	68 00 00 00 00	 push	 OFFSET ??_C@_02HCKGKOFO@?$CI?$CJ@
  00071	0f 11 81 9c 01
	00 00		 movups	 XMMWORD PTR [ecx+412], xmm0
  00078	0f 10 45 ca	 movups	 xmm0, XMMWORD PTR _kCreateSuccessPacket$[ebp+18]
  0007c	0f 11 81 ac 01
	00 00		 movups	 XMMWORD PTR [ecx+428], xmm0
  00083	0f 10 45 da	 movups	 xmm0, XMMWORD PTR _kCreateSuccessPacket$[ebp+34]
  00087	0f 11 81 bc 01
	00 00		 movups	 XMMWORD PTR [ecx+444], xmm0
  0008e	0f 10 45 ea	 movups	 xmm0, XMMWORD PTR _kCreateSuccessPacket$[ebp+50]
  00092	0f 11 81 cc 01
	00 00		 movups	 XMMWORD PTR [ecx+460], xmm0
  00099	8a 45 fa	 mov	 al, BYTE PTR _kCreateSuccessPacket$[ebp+66]
  0009c	88 81 dc 01 00
	00		 mov	 BYTE PTR [ecx+476], al
  000a2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_BuildValue
  000a8	50		 push	 eax
  000a9	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FIEGFADN@OnCreateSuccess@
  000ae	ff b6 88 01 00
	00		 push	 DWORD PTR [esi+392]
  000b4	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc

; 249  : 	return true;
; 250  : }

  000b9	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000bc	83 c4 10	 add	 esp, 16			; 00000010H
  000bf	33 cd		 xor	 ecx, ebp
  000c1	b0 01		 mov	 al, 1
  000c3	5e		 pop	 esi
  000c4	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000c9	8b e5		 mov	 esp, ebp
  000cb	5d		 pop	 ebp
  000cc	c3		 ret	 0
?__RecvPlayerCreateSuccessPacket@CPythonNetworkStream@@IAE_NXZ ENDP ; CPythonNetworkStream::__RecvPlayerCreateSuccessPacket
_TEXT	ENDS
; Function compile flags: /Ogtp
; File E:\Metin2_server\SolWayneSF v6\ClientVS22\source\UserInterface\PythonNetworkStreamPhaseSelect.cpp
;	COMDAT ?__RecvPlayerCreateFailurePacket@CPythonNetworkStream@@IAE_NXZ
_TEXT	SEGMENT
_packet$ = -4						; size = 2
?__RecvPlayerCreateFailurePacket@CPythonNetworkStream@@IAE_NXZ PROC ; CPythonNetworkStream::__RecvPlayerCreateFailurePacket, COMDAT
; _this$ = ecx

; 253  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	57		 push	 edi

; 254  : 	TPacketGCCreateFailure packet;
; 255  : 
; 256  : 	if (!Recv(sizeof(TPacketGCCreateFailure), &packet))

  00005	8d 45 fc	 lea	 eax, DWORD PTR _packet$[ebp]
  00008	8b f9		 mov	 edi, ecx
  0000a	50		 push	 eax
  0000b	6a 02		 push	 2
  0000d	e8 00 00 00 00	 call	 ?Recv@CNetworkStream@@QAE_NHPAX@Z ; CNetworkStream::Recv
  00012	84 c0		 test	 al, al
  00014	75 05		 jne	 SHORT $LN2@RecvPlayer
  00016	5f		 pop	 edi

; 262  : }

  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
$LN2@RecvPlayer:

; 257  : 		return false;
; 258  : 
; 259  : 	PyCallClassMemberFunc(m_apoPhaseWnd[PHASE_WINDOW_CREATE], "OnCreateFailure", Py_BuildValue("(i)", packet.bType));

  0001b	0f b6 45 fd	 movzx	 eax, BYTE PTR _packet$[ebp+1]
  0001f	50		 push	 eax
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_03LIHNMIHG@?$CIi?$CJ@
  00025	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_BuildValue
  0002b	50		 push	 eax
  0002c	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@JBAEOLGH@OnCreateFailure@
  00031	ff b7 88 01 00
	00		 push	 DWORD PTR [edi+392]
  00037	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc

; 260  : 	PyCallClassMemberFunc(m_apoPhaseWnd[PHASE_WINDOW_SELECT], "OnCreateFailure", Py_BuildValue("(i)", packet.bType));

  0003c	0f b6 45 fd	 movzx	 eax, BYTE PTR _packet$[ebp+1]
  00040	50		 push	 eax
  00041	68 00 00 00 00	 push	 OFFSET ??_C@_03LIHNMIHG@?$CIi?$CJ@
  00046	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_BuildValue
  0004c	50		 push	 eax
  0004d	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@JBAEOLGH@OnCreateFailure@
  00052	ff b7 84 01 00
	00		 push	 DWORD PTR [edi+388]
  00058	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  0005d	83 c4 28	 add	 esp, 40			; 00000028H

; 261  : 	return true;

  00060	b0 01		 mov	 al, 1
  00062	5f		 pop	 edi

; 262  : }

  00063	8b e5		 mov	 esp, ebp
  00065	5d		 pop	 ebp
  00066	c3		 ret	 0
?__RecvPlayerCreateFailurePacket@CPythonNetworkStream@@IAE_NXZ ENDP ; CPythonNetworkStream::__RecvPlayerCreateFailurePacket
_TEXT	ENDS
; Function compile flags: /Ogtp
; File E:\Metin2_server\SolWayneSF v6\ClientVS22\source\UserInterface\PythonNetworkStreamPhaseSelect.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File E:\Metin2_server\SolWayneSF v6\ClientVS22\source\UserInterface\PythonNetworkStreamPhaseSelect.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File E:\Metin2_server\SolWayneSF v6\ClientVS22\source\UserInterface\PythonNetworkStreamPhaseSelect.cpp
;	COMDAT ?__RecvPlayerDestroySuccessPacket@CPythonNetworkStream@@IAE_NXZ
_TEXT	SEGMENT
_packet$ = -4						; size = 2
?__RecvPlayerDestroySuccessPacket@CPythonNetworkStream@@IAE_NXZ PROC ; CPythonNetworkStream::__RecvPlayerDestroySuccessPacket, COMDAT
; _this$ = ecx

; 265  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi

; 266  : 	TPacketGCDestroyCharacterSuccess packet;
; 267  : 	if (!Recv(sizeof(TPacketGCDestroyCharacterSuccess), &packet))

  00005	8d 45 fc	 lea	 eax, DWORD PTR _packet$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	50		 push	 eax
  0000b	6a 02		 push	 2
  0000d	e8 00 00 00 00	 call	 ?Recv@CNetworkStream@@QAE_NHPAX@Z ; CNetworkStream::Recv
  00012	84 c0		 test	 al, al
  00014	75 05		 jne	 SHORT $LN2@RecvPlayer
  00016	5e		 pop	 esi

; 276  : }

  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
$LN2@RecvPlayer:

; 268  : 		return false;
; 269  : 
; 270  : 	memset(&m_akSimplePlayerInfo[packet.account_index], 0, sizeof(m_akSimplePlayerInfo[packet.account_index]));

  0001b	0f b6 4d fd	 movzx	 ecx, BYTE PTR _packet$[ebp+1]
  0001f	8b c1		 mov	 eax, ecx
  00021	81 c1 9c 01 00
	00		 add	 ecx, 412		; 0000019cH
  00027	c1 e0 06	 shl	 eax, 6
  0002a	6a 41		 push	 65			; 00000041H
  0002c	03 c6		 add	 eax, esi
  0002e	03 c1		 add	 eax, ecx
  00030	6a 00		 push	 0
  00032	50		 push	 eax
  00033	e8 00 00 00 00	 call	 _memset

; 271  : 	m_adwGuildID[packet.account_index] = 0;

  00038	0f b6 45 fd	 movzx	 eax, BYTE PTR _packet$[ebp+1]
  0003c	83 c4 0c	 add	 esp, 12			; 0000000cH
  0003f	c7 84 86 a0 02
	00 00 00 00 00
	00		 mov	 DWORD PTR [esi+eax*4+672], 0

; 272  : 	m_astrGuildName[packet.account_index] = "";

  0004a	0f b6 45 fd	 movzx	 eax, BYTE PTR _packet$[ebp+1]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 3546 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  0004e	6a 00		 push	 0
  00050	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@@
; File E:\Metin2_server\SolWayneSF v6\ClientVS22\source\UserInterface\PythonNetworkStreamPhaseSelect.cpp

; 272  : 	m_astrGuildName[packet.account_index] = "";

  00055	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  00058	8d 40 56	 lea	 eax, DWORD PTR [eax+86]
  0005b	8d 0c c6	 lea	 ecx, DWORD PTR [esi+eax*8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 3546 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  0005e	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File E:\Metin2_server\SolWayneSF v6\ClientVS22\source\UserInterface\PythonNetworkStreamPhaseSelect.cpp

; 274  : 	PyCallClassMemberFunc(m_apoPhaseWnd[PHASE_WINDOW_SELECT], "OnDeleteSuccess", Py_BuildValue("(i)", packet.account_index));

  00063	0f b6 45 fd	 movzx	 eax, BYTE PTR _packet$[ebp+1]
  00067	50		 push	 eax
  00068	68 00 00 00 00	 push	 OFFSET ??_C@_03LIHNMIHG@?$CIi?$CJ@
  0006d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_BuildValue
  00073	50		 push	 eax
  00074	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@NJIPBDGM@OnDeleteSuccess@
  00079	ff b6 84 01 00
	00		 push	 DWORD PTR [esi+388]
  0007f	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  00084	83 c4 14	 add	 esp, 20			; 00000014H

; 275  : 	return true;

  00087	b0 01		 mov	 al, 1
  00089	5e		 pop	 esi

; 276  : }

  0008a	8b e5		 mov	 esp, ebp
  0008c	5d		 pop	 ebp
  0008d	c3		 ret	 0
?__RecvPlayerDestroySuccessPacket@CPythonNetworkStream@@IAE_NXZ ENDP ; CPythonNetworkStream::__RecvPlayerDestroySuccessPacket
_TEXT	ENDS
; Function compile flags: /Ogtp
; File E:\Metin2_server\SolWayneSF v6\ClientVS22\source\UserInterface\PythonNetworkStreamPhaseSelect.cpp
;	COMDAT ?__RecvPlayerDestroyFailurePacket@CPythonNetworkStream@@IAE_NXZ
_TEXT	SEGMENT
_packet_blank$ = -1					; size = 1
?__RecvPlayerDestroyFailurePacket@CPythonNetworkStream@@IAE_NXZ PROC ; CPythonNetworkStream::__RecvPlayerDestroyFailurePacket, COMDAT
; _this$ = ecx

; 279  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi

; 280  : 	TPacketGCBlank packet_blank;
; 281  : 	if (!Recv(sizeof(TPacketGCBlank), &packet_blank))

  00005	8d 45 ff	 lea	 eax, DWORD PTR _packet_blank$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	50		 push	 eax
  0000b	6a 01		 push	 1
  0000d	e8 00 00 00 00	 call	 ?Recv@CNetworkStream@@QAE_NHPAX@Z ; CNetworkStream::Recv
  00012	84 c0		 test	 al, al
  00014	75 05		 jne	 SHORT $LN2@RecvPlayer
  00016	5e		 pop	 esi

; 286  : }

  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
$LN2@RecvPlayer:

; 282  : 		return false;
; 283  : 
; 284  : 	PyCallClassMemberFunc(m_apoPhaseWnd[PHASE_WINDOW_SELECT], "OnDeleteFailure", Py_BuildValue("()"));

  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_02HCKGKOFO@?$CI?$CJ@
  00020	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_BuildValue
  00026	50		 push	 eax
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@BAMNKIDG@OnDeleteFailure@
  0002c	ff b6 84 01 00
	00		 push	 DWORD PTR [esi+388]
  00032	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  00037	83 c4 10	 add	 esp, 16			; 00000010H

; 285  : 	return true;

  0003a	b0 01		 mov	 al, 1
  0003c	5e		 pop	 esi

; 286  : }

  0003d	8b e5		 mov	 esp, ebp
  0003f	5d		 pop	 ebp
  00040	c3		 ret	 0
?__RecvPlayerDestroyFailurePacket@CPythonNetworkStream@@IAE_NXZ ENDP ; CPythonNetworkStream::__RecvPlayerDestroyFailurePacket
_TEXT	ENDS
; Function compile flags: /Ogtp
; File E:\Metin2_server\SolWayneSF v6\ClientVS22\source\UserInterface\PythonNetworkStreamPhaseSelect.cpp
;	COMDAT ?__RecvChangeName@CPythonNetworkStream@@IAE_NXZ
_TEXT	SEGMENT
_ChangeNamePacket$ = -36				; size = 30
__$ArrayPad$ = -4					; size = 4
?__RecvChangeName@CPythonNetworkStream@@IAE_NXZ PROC	; CPythonNetworkStream::__RecvChangeName, COMDAT
; _this$ = ecx

; 289  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 24	 sub	 esp, 36			; 00000024H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	57		 push	 edi

; 290  : 	TPacketGCChangeName ChangeNamePacket;
; 291  : 	if (!Recv(sizeof(TPacketGCChangeName), &ChangeNamePacket))

  00011	8d 45 dc	 lea	 eax, DWORD PTR _ChangeNamePacket$[ebp]
  00014	8b f9		 mov	 edi, ecx
  00016	50		 push	 eax
  00017	6a 1e		 push	 30			; 0000001eH
  00019	e8 00 00 00 00	 call	 ?Recv@CNetworkStream@@QAE_NHPAX@Z ; CNetworkStream::Recv
  0001e	84 c0		 test	 al, al
  00020	75 0f		 jne	 SHORT $LN5@RecvChange
  00022	5f		 pop	 edi

; 307  : 	return true;
; 308  : }

  00023	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00026	33 cd		 xor	 ecx, ebp
  00028	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002d	8b e5		 mov	 esp, ebp
  0002f	5d		 pop	 ebp
  00030	c3		 ret	 0
$LN5@RecvChange:

; 292  : 		return false;
; 293  : 
; 294  : 	for (int i = 0; i < PLAYER_PER_ACCOUNT4; ++i)

  00031	8b 45 dd	 mov	 eax, DWORD PTR _ChangeNamePacket$[ebp+1]
  00034	8b cf		 mov	 ecx, edi
  00036	56		 push	 esi
  00037	33 f6		 xor	 esi, esi
  00039	0f 1f 80 00 00
	00 00		 npad	 7
$LL4@RecvChange:

; 295  : 	{
; 296  : 		if (ChangeNamePacket.pid == m_akSimplePlayerInfo[i].dwID)

  00040	3b 81 9c 01 00
	00		 cmp	 eax, DWORD PTR [ecx+412]
  00046	74 3c		 je	 SHORT $LN9@RecvChange

; 292  : 		return false;
; 293  : 
; 294  : 	for (int i = 0; i < PLAYER_PER_ACCOUNT4; ++i)

  00048	46		 inc	 esi
  00049	83 c1 41	 add	 ecx, 65			; 00000041H
  0004c	83 fe 04	 cmp	 esi, 4
  0004f	7c ef		 jl	 SHORT $LL4@RecvChange

; 302  : 			return true;
; 303  : 		}
; 304  : 	}
; 305  : 
; 306  : 	PyCallClassMemberFunc(m_apoPhaseWnd[PHASE_WINDOW_SELECT], "OnCreateFailure", Py_BuildValue("(i)", 100));

  00051	6a 64		 push	 100			; 00000064H
  00053	68 00 00 00 00	 push	 OFFSET ??_C@_03LIHNMIHG@?$CIi?$CJ@
  00058	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_BuildValue
  0005e	50		 push	 eax
  0005f	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@JBAEOLGH@OnCreateFailure@
  00064	ff b7 84 01 00
	00		 push	 DWORD PTR [edi+388]
  0006a	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  0006f	83 c4 14	 add	 esp, 20			; 00000014H
  00072	b0 01		 mov	 al, 1
  00074	5e		 pop	 esi
  00075	5f		 pop	 edi

; 307  : 	return true;
; 308  : }

  00076	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00079	33 cd		 xor	 ecx, ebp
  0007b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00080	8b e5		 mov	 esp, ebp
  00082	5d		 pop	 ebp
  00083	c3		 ret	 0
$LN9@RecvChange:

; 297  : 		{
; 298  : 			m_akSimplePlayerInfo[i].bChangeName = FALSE;

  00084	8b c6		 mov	 eax, esi
  00086	c1 e0 06	 shl	 eax, 6
  00089	03 c7		 add	 eax, edi

; 299  : 			strncpy(m_akSimplePlayerInfo[i].szName, ChangeNamePacket.name, CHARACTER_NAME_MAX_LEN);

  0008b	6a 18		 push	 24			; 00000018H
  0008d	c6 84 06 c5 01
	00 00 00	 mov	 BYTE PTR [esi+eax+453], 0
  00095	8d 45 e1	 lea	 eax, DWORD PTR _ChangeNamePacket$[ebp+5]
  00098	50		 push	 eax
  00099	8d 81 a0 01 00
	00		 lea	 eax, DWORD PTR [ecx+416]
  0009f	50		 push	 eax
  000a0	e8 00 00 00 00	 call	 _strncpy

; 300  : 
; 301  : 			PyCallClassMemberFunc(m_apoPhaseWnd[PHASE_WINDOW_SELECT], "OnChangeName", Py_BuildValue("(is)", i, ChangeNamePacket.name));

  000a5	8d 45 e1	 lea	 eax, DWORD PTR _ChangeNamePacket$[ebp+5]
  000a8	50		 push	 eax
  000a9	56		 push	 esi
  000aa	68 00 00 00 00	 push	 OFFSET ??_C@_04JMLDJNEM@?$CIis?$CJ@
  000af	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_BuildValue
  000b5	50		 push	 eax
  000b6	68 00 00 00 00	 push	 OFFSET ??_C@_0N@ICACADKM@OnChangeName@
  000bb	ff b7 84 01 00
	00		 push	 DWORD PTR [edi+388]
  000c1	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc

; 307  : 	return true;
; 308  : }

  000c6	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000c9	83 c4 24	 add	 esp, 36			; 00000024H
  000cc	33 cd		 xor	 ecx, ebp
  000ce	b0 01		 mov	 al, 1
  000d0	5e		 pop	 esi
  000d1	5f		 pop	 edi
  000d2	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000d7	8b e5		 mov	 esp, ebp
  000d9	5d		 pop	 ebp
  000da	c3		 ret	 0
?__RecvChangeName@CPythonNetworkStream@@IAE_NXZ ENDP	; CPythonNetworkStream::__RecvChangeName
_TEXT	ENDS
END
